purpose: >
  Documents the registry and plugin systems for fields, entities, editors, and features in the tech stack.
main_content:
  field_registry:
    - Centralized FieldTypeRegistry for registering and resolving field types
    - Field adapters wrap Material-UI components for editing and viewing
    - Register new field types with registerFieldType({ id, name, category, createAdapter })
    - Use React Context to provide registry access throughout the app
  entity_plugin_system:
    - Plugins extend entity forms without modifying core functionality
    - Register plugins per entity type using useEntityPlugins('entityType')
    - Plugins can be positioned: before-form, after-form, sidebar, footer
    - Plugins receive entity data, form state, and custom props
    - Priority and condition functions control rendering order and visibility
  pluggable_editor_registry:
    - Register arbitrary editor components by string key (namespaced, e.g., cliente.selector)
    - All editors must accept a generic EntityEditorProps interface
    - Editors can be overridden or unregistered at runtime
    - Use getEditorOrDefault to provide fallback editors
    - Registry is discoverable for debugging and dynamic UI
  feature_registry:
    - Central registry for features and their UI components
    - Register features with featureRegistry.register(id, config) or registerWithComponent
    - Retrieve features, check existence, and list all features/components
    - Enables feature toggles, plugin systems, analytics, access control, and dynamic routing
  best_practices:
    - Register all field types, plugins, and editors at app startup
    - Use clear, namespaced keys for organization
    - Document new registry entries and their props
    - Leverage TypeScript for type safety throughout
usage_guidelines: |
  - Register all field types and plugins at app startup
  - Use namespaced keys and document new entries
  - Use TypeScript for type safety
revision_policy: >
  Update when introducing new registry types, plugin systems, or best practices. 